<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <context:component-scan base-package="com.youzhong.service"></context:component-scan>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
        <property name="username" value="scott"></property>
        <property name="password" value="123456"></property>
        <property name="maxActive" value="20"></property>
        <property name="minIdle" value="5"></property>
        <property name="initialSize" value="5"></property>

    </bean>

    <!-- 创建SqlSessionFactory -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=oracle
                        </value>
                    </property>
                </bean>
            </array>
        </property>


        <!-- mybatis 配置文件在的地址 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- mapperLocations : 映射文件的路径 -->
        <property name="mapperLocations" value="classpath:com/youzhong/mapper/*.xml"></property>
        <!-- 配置別名 -->
        <property name="typeAliasesPackage" value="com.youzhong.entity"></property>
        <!-- 配置数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置Bean，产生Mapper接口的代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- mapper 接口所在的包 -->
        <property name="basePackage" value="com.youzhong.dao"></property>
        <!-- 配置 sqlSessionFactory Bean 的名称 -->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
    </bean>

    <!-- 配置切面：实现了事务管理 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- dataSource : 数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置切面类的增强（事务增强）：需要增强事务，配置这个事务特性，以及哪些方法需要添加事务，添加什么样事务 -->
    <!-- transaction-manager : 给哪个切面做增强 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- 事务属性 -->
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="show*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- AOP配置 -->
    <aop:config>
        <!-- 规定给哪些类添加事务:给service层所有方法添加 -->
        <aop:pointcut expression="execution(* com.youzhong.service..*.*(..))" id="pt"/>
        <!-- 让切面起作用 ： 将切入点表达式和切面关联-->
        <!-- advice-ref : tx-advice 的应用 ， 其实就是切面 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
    </aop:config>

</beans>